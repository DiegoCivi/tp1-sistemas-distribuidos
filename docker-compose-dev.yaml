version: '3'
services:

  rabbitmq:
    container_name: rabbit
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 10s
        timeout: 5s
        retries: 10

  # producer:
  #   container_name: producer
  #   build:
  #     context: .
  #     dockerfile: ./producer/producer.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - HOST=server
  #     - PORT=12345
  #     - LISTEN_BACKLOG=1

  # consumer1:
  #   container_name: consumer1
  #   build:
  #     context: .
  #     dockerfile: ./consumer/consumer.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - HOST=1
  #     - PORT=12345
  #     - LISTEN_BACKLOG=1

  # consumer2:
  #   container_name: consumer2
  #   build:
  #     context: .
  #     dockerfile: ./consumer/consumer.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - HOST=2
  #     - PORT=12345
  #     - LISTEN_BACKLOG=1

  server:
    container_name: server
    build:
      context: .
      dockerfile: ./server/server.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - HOST=server
      - PORT=12345
      - LISTEN_BACKLOG=1

  client:
    container_name: client
    build:
      context: .
      dockerfile: ./client/client.dockerfile
    depends_on:
      - server
    links: 
      - server
    environment:
      - PYTHONUNBUFFERED=1
      - HOST=server
      - PORT=12345
      - TITLES_FILEPATH=./datasets/books_data.csv
      - REVIEWS_FILEPATH=./datasets/books_rating_sample.csv
    volumes:
      - ./datasets:/datasets

  query_coordinator_worker:
    container_name: query_coordinator_worker
    build:
      context: .
      dockerfile: ./query_coordinator/query_coordinator_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - EOF_TITLES_MAX_SUBS=3
      - EOF_REVIEWS_MAX_SUBS=3

# QUERY 1

  # filter_category_computers_worker0:
  #   container_name: filter_category_computers_worker0
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_category_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=0
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=3
  #     - CATEGORY=Computers
  #     - SOURCE_QUEUE=q1_titles
  #     - DATA_SOURCE_NAME=data
  #     - DATA_OUTPUT_NAME=QUEUE_Q1|filter_title_worker
  #     - EOF_QUEUE=QUEUE_Q1|eof_category

  # filter_category_computers_worker1:
  #   container_name: filter_category_computers_worker1
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_category_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=1
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=3
  #     - CATEGORY=Computers
  #     - SOURCE_QUEUE=q1_titles
  #     - DATA_SOURCE_NAME=data
  #     - DATA_OUTPUT_NAME=QUEUE_Q1|filter_title_worker
  #     - EOF_QUEUE=QUEUE_Q1|eof_category

  # filter_category_computers_worker2:
  #   container_name: filter_category_computers_worker2
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_category_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=2
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=3
  #     - CATEGORY=Computers
  #     - SOURCE_QUEUE=q1_titles
  #     - DATA_SOURCE_NAME=data
  #     - DATA_OUTPUT_NAME=QUEUE_Q1|filter_title_worker
  #     - EOF_QUEUE=QUEUE_Q1|eof_category

  # filter_title_worker0:
  #   container_name: filter_title_worker0
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_title_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=0
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=3
  #     - TITLE_TO_FILTER=distributed
  #     - DATA_SOURCE_NAME=QUEUE_Q1|filter_title_worker
  #     - DATA_OUTPUT_NAME=QUEUE_Q1|filter_year_worker
  #     - EOF_QUEUE=QUEUE_Q1|eof_title

  # filter_title_worker1:
  #   container_name: filter_title_worker1
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_title_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=1
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=3
  #     - TITLE_TO_FILTER=distributed
  #     - DATA_SOURCE_NAME=QUEUE_Q1|filter_title_worker
  #     - DATA_OUTPUT_NAME=QUEUE_Q1|filter_year_worker
  #     - EOF_QUEUE=QUEUE_Q1|eof_title

  # filter_title_worker2:
  #   container_name: filter_title_worker2
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_title_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=2
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=3
  #     - TITLE_TO_FILTER=distributed
  #     - DATA_SOURCE_NAME=QUEUE_Q1|filter_title_worker
  #     - DATA_OUTPUT_NAME=QUEUE_Q1|filter_year_worker
  #     - EOF_QUEUE=QUEUE_Q1|eof_title
  
  # filter_year_worker0:
  #   container_name: filter_year_worker0
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_year_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=0
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=1
  #     - YEAR_RANGE_TO_FILTER=2000,2023
  #     - DATA_SOURCE_NAME=QUEUE_Q1|filter_year_worker
  #     - DATA_OUTPUT_NAME=????????????
  #     - EOF_QUEUE=QUEUE_Q1|eof_year

  # filter_year_worker1:
  #   container_name: filter_year_worker1
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_year_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=1
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=1
  #     - YEAR_RANGE_TO_FILTER=2000,2023
  #     - DATA_SOURCE_NAME=QUEUE_Q1|filter_year_worker
  #     - DATA_OUTPUT_NAME=????????????
  #     - EOF_QUEUE=QUEUE_Q1|eof_year

  # filter_year_worker2:
  #   container_name: filter_year_worker2
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_year_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=2
  #     - WORKER_QUANTITY=3
  #     - NEXT_WORKER_QUANTITY=1
  #     - YEAR_RANGE_TO_FILTER=2000,2023
  #     - DATA_SOURCE_NAME=QUEUE_Q1|filter_year_worker
  #     - DATA_OUTPUT_NAME=????????????
  #     - EOF_QUEUE=QUEUE_Q1|eof_year

  # QUERY 2    

  # decade_counter_worker0:
  #  container_name: decade_counter_worker0
  #  build:
  #    context: .
  #    dockerfile: ./workers_dockerfiles/decade_counter_worker.dockerfile
  #  depends_on:
  #    - rabbitmq
  #  links: 
  #    - rabbitmq
  #  environment:
  #    - WORKER_ID=0
  #    - DATA_SOURCE_NAME=data
  #    - SOURCE_QUEUE=q2_titles
  #    - DATA_OUTPUT_NAME=QUEUE_Q2|global_decade_counter_worker

  # decade_counter_worker1:
  #  container_name: decade_counter_worker1
  #  build:
  #    context: .
  #    dockerfile: ./workers_dockerfiles/decade_counter_worker.dockerfile
  #  depends_on:
  #    - rabbitmq
  #  links: 
  #    - rabbitmq
  #  environment:
  #    - WORKER_ID=1
  #    - DATA_SOURCE_NAME=data
  #    - SOURCE_QUEUE=q2_titles
  #    - DATA_OUTPUT_NAME=QUEUE_Q2|global_decade_counter_worker

  # decade_counter_worker2:
  #  container_name: decade_counter_worker2
  #  build:
  #    context: .
  #    dockerfile: ./workers_dockerfiles/decade_counter_worker.dockerfile
  #  depends_on:
  #    - rabbitmq
  #  links: 
  #    - rabbitmq
  #  environment:
  #    - WORKER_ID=2
  #    - DATA_SOURCE_NAME=data
  #    - SOURCE_QUEUE=q2_titles
  #    - DATA_OUTPUT_NAME=QUEUE_Q2|global_decade_counter_worker

  # global_decade_counter_worker:
  #  container_name: global_decade_counter_worker
  #  build:
  #    context: .
  #    dockerfile: ./workers_dockerfiles/global_decade_counter_worker.dockerfile
  #  depends_on:
  #    - rabbitmq
  #  links: 
  #    - rabbitmq
  #  environment:
  #    - EOF_QUANTITY=3
  #    - DATA_SOURCE_NAME=QUEUE_Q2|global_decade_counter_worker
  #    - DATA_OUTPUT_NAME=nose

# QUERY 3

  filter_year_worker0:
    container_name: filter_year_worker0
    build:
      context: .
      dockerfile: ./workers_dockerfiles/filter_year_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - YEAR_RANGE_TO_FILTER=1990,1999
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=QUEUE_Q3|hash_title_worker
      - EXCHANGE_TYPE=fanout
      - WORKER_ID=0
      - NEXT_WORKER_QUANTITY=3
      - EOF_QUEUE=QUEUE_Q3|eof_year
      - WORKER_QUANTITY=3

  filter_year_worker1:
    container_name: filter_year_worker1
    build:
      context: .
      dockerfile: ./workers_dockerfiles/filter_year_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - YEAR_RANGE_TO_FILTER=1990,1999
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=QUEUE_Q3|hash_title_worker
      - EXCHANGE_TYPE=fanout
      - WORKER_ID=1
      - NEXT_WORKER_QUANTITY=3
      - EOF_QUEUE=QUEUE_Q3|eof_year
      - WORKER_QUANTITY=3

  filter_year_worker2:
    container_name: filter_year_worker2
    build:
      context: .
      dockerfile: ./workers_dockerfiles/filter_year_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - YEAR_RANGE_TO_FILTER=1990,1999
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=QUEUE_Q3|hash_title_worker
      - EXCHANGE_TYPE=fanout
      - WORKER_ID=2
      - NEXT_WORKER_QUANTITY=3
      - EOF_QUEUE=QUEUE_Q3|eof_year
      - WORKER_QUANTITY=3
      
  hash_title_worker0:
    container_name: hash_title_worker0
    build:
      context: .
      dockerfile: ./workers_dockerfiles/hash_title_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - DATA_SOURCE_NAME=QUEUE_Q3|hash_title_worker,QUEUE_Q5|hash_title_worker,data,QUEUE_Q5|hash_review_worker
      - DATA_OUTPUT_NAME=hashed
      - HASH_MODULUS=4

  hash_title_worker1:
    container_name: hash_title_worker1
    build:
      context: .
      dockerfile: ./workers_dockerfiles/hash_title_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - DATA_SOURCE_NAME=QUEUE_Q3|hash_title_worker,QUEUE_Q5|hash_title_worker,data,QUEUE_Q5|hash_review_worker
      - DATA_OUTPUT_NAME=hashed
      - HASH_MODULUS=4

  hash_title_worker2:
    container_name: hash_title_worker2
    build:
      context: .
      dockerfile: ./workers_dockerfiles/hash_title_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - DATA_SOURCE_NAME=QUEUE_Q3|hash_title_worker,QUEUE_Q5|hash_title_worker,data,QUEUE_Q5|hash_review_worker
      - DATA_OUTPUT_NAME=hashed
      - HASH_MODULUS=4

  reviews_counter_worker1:
    container_name: reviews_counter_worker1
    build:
      context: .
      dockerfile: ./workers_dockerfiles/reviews_counter_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - WORKER_ID=0
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=Q3|filter_review_quantity_worker
      
  reviews_counter_worker2:
    container_name: reviews_counter_worker2
    build:
      context: .
      dockerfile: ./workers_dockerfiles/reviews_counter_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - WORKER_ID=1
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=Q3|filter_review_quantity_worker
      
  reviews_counter_worker3:
    container_name: reviews_counter_worker3
    build:
      context: .
      dockerfile: ./workers_dockerfiles/reviews_counter_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - WORKER_ID=2
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=Q3|filter_review_quantity_worker
  
  reviews_counter_worker4:
    container_name: reviews_counter_worker4
    build:
      context: .
      dockerfile: ./workers_dockerfiles/reviews_counter_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - WORKER_ID=3
      - DATA_SOURCE_NAME=data
      - DATA_OUTPUT_NAME=Q3|filter_review_quantity_worker

  filter_review_quantity_worker:
    container_name: filter_review_quantity
    build:
      context: .
      dockerfile: ./workers_dockerfiles/filter_review_quantity_worker.dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - DATA_SOURCE_NAME=Q3|filter_review_quantity_worker
      - DATA_OUTPUT_NAME=Q3|query_management_node,Q4|fist_filter_of_q4
      - MIN_QUANTITY=500
      - WORKERS_QUANTITY=4
      


# QUERY 4

  # top_10_worker1:
  #   container_name: top_10_worker1
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/top_10_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - TOP_N=10
  #     - DATA_SOURCE_NAME=
  #     - DATA_OUTPUT_NAME=
  #     - LAST=0

  # top_10_worker2:
  #   container_name: top_10_worker2
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/top_10_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - TOP_N=10
  #     - DATA_SOURCE_NAME=
  #     - DATA_OUTPUT_NAME=
  #     - LAST=1

# QUERY 5

  # review_sentiment_worker:
  #   container_name: review_sentiment_worker
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/review_sentiment_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - TOP_N=10
  #     - DATA_SOURCE_NAME=data
  #     - SOURCE_QUEUE=q5_reviews
  #     - DATA_OUTPUT_NAME=QUEUE_Q5|hash_review_worker

  # filter_category_worker:
  #   container_name: filter_category_worker
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/filter_category_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - CATEGORY=Fiction
  #     - DATA_SOURCE_NAME=data
  #     - SOURCE_QUEUE=q5_titles
  #     - DATA_OUTPUT_NAME=QUEUE_Q5|hash_title_worker

  # mean_review_sentiment_worker0:
  #   container_name: mean_review_sentiment_worker0
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/mean_review_sentiment_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=0
  #     - PYTHONUNBUFFERED=1
  #     - DATA_SOURCE_NAME=hashed
  #     - DATA_OUTPUT_NAME=Q5|percentile_worker

  # mean_review_sentiment_worker1:
  #   container_name: mean_review_sentiment_worker1
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/mean_review_sentiment_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=1
  #     - PYTHONUNBUFFERED=1
  #     - DATA_SOURCE_NAME=hashed
  #     - DATA_OUTPUT_NAME=Q5|percentile_worker

  # mean_review_sentiment_worker2:
  #   container_name: mean_review_sentiment_worker2
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/mean_review_sentiment_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=2
  #     - PYTHONUNBUFFERED=1
  #     - DATA_SOURCE_NAME=hashed
  #     - DATA_OUTPUT_NAME=Q5|percentile_worker

  # mean_review_sentiment_worker3:
  #   container_name: mean_review_sentiment_worker3
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/mean_review_sentiment_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - WORKER_ID=3
  #     - PYTHONUNBUFFERED=1
  #     - DATA_SOURCE_NAME=hashed
  #     - DATA_OUTPUT_NAME=Q5|percentile_worker

  # percentile_worker:
  #   container_name: percentile_worker
  #   build:
  #     context: .
  #     dockerfile: ./workers_dockerfiles/percentile_worker.dockerfile
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - DATA_SOURCE_NAME=Q5|percentile_worker
  #     - DATA_OUTPUT_NAME=Q5|response
  #     - PERCENTILE=90
  #     - WORKERS_QUANTITY=4
